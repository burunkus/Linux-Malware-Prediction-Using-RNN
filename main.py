import numpy as np
import pandas as pd
from copy import deepcopy
import gc

from col_headers import Header
from experiments import Experiments, Configs
from experiments.useful import timestamped_to_vector, unison_shuffled_copies, extract_neg

# Load data
headers = Header()
c = headers.classification_col
print(c)
data = pd.read_csv("cleandatafinal.csv")

test = data[data["test_set"] == True]
# print(test)
train = data[data["test_set"] == False]
# print(train)
'''convert DataFrame to its Numpy-array. only values of the DataFrame will be returned
with the specified columns. n-dimensional array'''
train = train.as_matrix(columns=headers.training_headers)
# train = train[headers.training_headers].values
test = test.as_matrix(columns=headers.training_headers)

x_test, y_test = timestamped_to_vector(test, classification_col=c)
x_train, y_train = timestamped_to_vector(train, classification_col=c)

'''Two experiments are happening, 10 fold cross validation on the training set using random search and test-train experiment. They are both working in parallel, I think.
The call to Experiment class, setup the 10 fold validation experiment and creates an object of that class
The call to Ensemble_configuration, setup the test-train experiment and creates an instance of that class.
The object of that class is used to run the two experiments in parallel (side by side)
'''

# Random search with thresholding
rand_params = Configs.get_all()

expt = Experiments.Experiment(rand_params, search_algorithm="random",
                              data=(x_train, y_train), folds=10, folder_name="random_search_results",
                              thresholding=True, threshold=0.5)

# parameter configurations
A_B_C = Configs.get_A_B_C()

# Ensemble model
ensemble_config = Experiments.Ensemble_configurations(list(A_B_C.values()),
                                                      x_test=x_test, y_test=y_test,
                                                      x_train=x_train, y_train=y_train,
                                                      folder_name="test_train_results",
                                                      batch_size=64)
ensemble_config.run_experiments()
